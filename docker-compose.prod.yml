version: '3.8'

services:
  
  # ============================================
  # FRONTEND PRODUCTION (Nginx)
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # On va jusqu'à l'étape finale (nginx)
      target: production
    
    # Nom d'image pour le push vers un registry
    image: monregistry/monapp-frontend:latest
    
    container_name: prod-frontend
    
    ports:
      - "80:80"
    
    # PAS de volumes en prod (tout est dans l'image)
    
    environment:
      
      - VITE_API_URL=${API_URL}
    
    # Politique de redémarrage automatique
    restart: unless-stopped
    
   
    
    networks:
      - app-network
    
    depends_on:
      - backend
    
    # Healthcheck Nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================
  # BACKEND PRODUCTION
  # ============================================
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
      target: production
    
    image: monregistry/monapp-backend:latest
    
    container_name: prod-backend
    
    ports:
      - "3000:3000"
    
    # Variables d'environnement depuis fichier
    env_file:
      - .env.prod
    
   
    
    restart: unless-stopped
    
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    networks:
      - app-network
    
 


networks:
  app-network:
    driver: bridge

# Secrets Docker (optionnel, plus sécurisé que .env)
# secrets:
#   db_url:
#     external: true
#   supabase_key:
#     external: true