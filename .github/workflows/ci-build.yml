name: CI - Build et Push Docker Images

on:
  push:
    branches: [main, dev, CICD]
  pull_request:
    branches: [main, dev]

jobs:
  docker-build-push:
    name: üê≥ Build et Push vers Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout du code
        uses: actions/checkout@v4

      - name:  Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name:  Login vers Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name:  Pr√©parer les tags Docker Backend
        id: meta-backend
        run: |
          BRANCH=${GITHUB_REF##*/}
          echo "tags=${{ secrets.DOCKER_USERNAME }}/monapp-backend:${BRANCH}" >> $GITHUB_OUTPUT
          if [ "$BRANCH" == "main" ]; then
            echo "tags=${{ secrets.DOCKER_USERNAME }}/monapp-backend:${BRANCH},${{ secrets.DOCKER_USERNAME }}/monapp-backend:latest" >> $GITHUB_OUTPUT
          fi

      - name:  Pr√©parer les tags Docker Frontend
        id: meta-frontend
        run: |
          BRANCH=${GITHUB_REF##*/}
          echo "tags=${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${BRANCH}" >> $GITHUB_OUTPUT
          if [ "$BRANCH" == "main" ]; then
            echo "tags=${{ secrets.DOCKER_USERNAME }}/monapp-frontend:${BRANCH},${{ secrets.DOCKER_USERNAME }}/monapp-frontend:latest" >> $GITHUB_OUTPUT
          fi

      - name:  Build et Push Backend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/Dockerfile
          target: production
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name:  Build et Push Frontend Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          target: production
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name:  Images publi√©es avec succ√®s !
        run: |
          echo " Images Docker publi√©es sur Docker Hub !"
          echo " Backend : ${{ steps.meta-backend.outputs.tags }}"
          echo " Frontend : ${{ steps.meta-frontend.outputs.tags }}"